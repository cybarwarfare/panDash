{"version":3,"sources":["img/PANTO.png","Screen/DashScreen/DashScreen.js","config.js","Screen/UserListScreen/UserListScreen.js","Screen/PayOutScreen/PayOutScreen.js","Screen/BackupScreen/BackupScreen.js","component/navigater.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","DashScreen","props","state","className","style","width","height","backgroundColor","fontSize","textTransform","fontWeight","borderBottomLeftRadius","borderBottomRightRadius","React","Component","fire","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","UserListScreen","newFun","a","database","ref","on","snapshot","list","forEach","snap","push","val","console","log","setState","values","isLoading","message","columns","title","field","headerFilter","this","Spinner","animation","color","type","src","require","data","tooltips","layout","SalesScreen","child","handleCSV","setTimeout","Promise","removeNode","modeData","remove","all","resolve","e","alert","index","RazorpayX_Account_Number","Payout_Amount","Number","Payout_Currency","Payout_Mode","Payout_Purpose","Payout_Narration","Payout_Reference_Id","Fund_Account_Id","Fund_Account_Type","Fund_Account_Name","Fund_Account_Ifsc","Fund_Account_Number","Fund_Account_Vpa","Contact_Type","Contact_Name","Contact_Email","Contact_Mobile","Contact_Reference_Id","notes_place","notes_code","csv","label","key","headers","filename","onClick","BackupScreen","Navigater","basename","alt","exact","to","pathname","activeStyle","data-toggle","data-placement","path","component","PayOutScreen","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.77f7ed1b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/PANTO.2d18a2c8.png\";","import React from 'react';\r\n\r\nclass DashScreen extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n        }\r\n    }\r\n\r\ncomponentDidMount(){\r\n    \r\n}\r\n    render(){\r\n        return(\r\n            <div className=\"d-flex justify-content-center align-items-center flex-column\" style={{width:'95vw',height:'100vh',backgroundColor:\"#f6f7fb\"}}>\r\n                <div className=\"d-flex container justify-content-start align-items-center\" style={{width:'95vw',height:'15vh'}}>\r\n                    <span style={{fontSize:'2em',textTransform:\"capitalize\", fontWeight:'bold'}}>good morning, <span style={{fontWeight:'normal'}}>Panto</span></span>\r\n                </div>\r\n                <div className=\"d-flex container p-1 flex-row m-2 justify-content-around\" style={{width:'95vw',height:'40vh'}}>\r\n                    <div className=\"col-2 d-flex justify-content-center align-items-center\">\r\n                        <div className=\"rounded-lg\" style={{height:'100%',width:'100%',backgroundColor:'#5a5df6'}}></div>\r\n                    </div>\r\n                    <div className=\"col-4 d-flex justify-content-center align-items-center\">\r\n                        <div className=\"rounded-lg\" style={{height:'100%',width:'100%',backgroundColor:'white'}}></div>\r\n                    </div>\r\n                    <div className=\"col-6 d-flex justify-content-center align-items-center\">\r\n                        <div className=\"rounded-lg d-flex flex-column\" style={{height:'100%',width:'100%'}}>\r\n                            <span className=\"m-2 font-weight-bold pl-2\">Your Project</span>\r\n                            <div className=\"shadow-sm\" style={{backgroundColor:'white',height:'100%',width:'100%',borderBottomLeftRadius:10,borderBottomRightRadius:10}}></div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"d-flex container p-1 flex-row m-2 justify-content-around\" style={{width:'95vw',height:'40vh'}}>\r\n                    <div className=\"col-7 d-flex justify-content-center align-items-center\">\r\n                        <div className=\"rounded-lg\" style={{height:'100%',width:'100%',backgroundColor:'white'}}></div>\r\n                    </div>\r\n                    <div className=\"col-5 d-flex justify-content-center align-items-center\">\r\n                        <div className=\"rounded-lg\" style={{height:'100%',width:'100%',backgroundColor:'#162447'}}></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default DashScreen;","import * as firebase from 'firebase';\r\n\r\nvar config = {\r\n    apiKey: \"AIzaSyCgy4ZJK7FF5BIZj5kobpqmkCm3ZyAb9aM\",\r\n    authDomain: \"cloudfuntest-5c7c9.firebaseapp.com\",\r\n    databaseURL: \"https://cloudfuntest-5c7c9.firebaseio.com\",\r\n    projectId: \"cloudfuntest-5c7c9\",\r\n    storageBucket: \"cloudfuntest-5c7c9.appspot.com\",\r\n    messagingSenderId: \"843247186001\",\r\n    appId: \"1:843247186001:web:7832c1934bbe2e8aa38870\",\r\n    measurementId: \"G-M884R0NH4N\"\r\n};\r\nvar fire = firebase.initializeApp(config);\r\nexport default fire;","import React from \"react\";\r\nimport firebase from \"../../config\";\r\n// import 'react-tabulator/lib/styles.css';\r\nimport { ReactTabulator } from \"react-tabulator\";\r\nimport {Spinner} from 'react-bootstrap'\r\n// import { CSVLink } from \"react-csv\";\r\n\r\nclass UserListScreen extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      values: [],\r\n      columns: [\r\n        { title: \"ID\", field: \"id\", width: 100},\r\n        { title: \"Email\", field: \"Email\",headerFilter: \"input\"},\r\n        { title: \"First Name\", field: \"FirstName\", },\r\n        { title: \"Last Name\", field: \"LastName\", },\r\n        { title: \"Phone\", field: \"Phone\", },\r\n        { title: \"Total Revenue\", field: \"totalMoney\", },\r\n        { title: \"Revenue\", field: \"payMoney\", },\r\n        { title: \"Referal count\", field: \"totalRefaral\", },\r\n        { title: \"Downline count\", field: \"refaral_refaral_count\", }\r\n      ],\r\n      isLoading:false,\r\n    };\r\n  }\r\n\r\n\r\n  async componentDidMount(){\r\n    this.setState({isLoading: true});\r\n    this.newFun();\r\n  }\r\n  // componentWillUnmount(){\r\n  //   console.log(\"unmounded\");\r\n  //   this.setState({status: false});\r\n  // }\r\n\r\n  newFun = async () =>{\r\n    try{\r\n      var fire =  await firebase.database().ref('users');\r\n      await fire.on('value', snapshot =>{\r\n          let list =[];\r\n          snapshot.forEach(snap =>{\r\n              list.push(snap.val());\r\n          });\r\n          console.log(list);\r\n          this.setState({values: list, isLoading: false});\r\n      })\r\n    } catch(e){\r\n        console.log(e.message)\r\n    }\r\n}\r\n\r\n  render() {\r\n    return (\r\n      this.state.isLoading == true ? (\r\n        <div className=\"d-flex justify-content-center align-items-center\" style={{width:'95vw',height:'100vh',backgroundColor:'#f6f7fb'}}>\r\n          <Spinner animation=\"border\" />\r\n        </div>\r\n      ) :(\r\n        <div className=\"d-flex justify-content-start align-items-start flex-column\" style={{width:'95vw',height:'100vh',backgroundColor:'#f6f7fb'}}>\r\n            <div className=\"bg-primary d-flex justify-content-between align-items-center\" style={{ width: '100%', height: 60 }}>\r\n                <span className=\"font-weight-bold pl-4 mr-3\" style={{ fontSize: 20, color: 'white' }}>PAY OUT</span>\r\n              <div type=\"button\" className=\"rounded-circle d-flex justify-content-center align-items-center mr-4\" style={{ width: 40, height: 40, backgroundColor: 'white' }}>\r\n                <img src={require('../../img/PANTO.png')} style={{ width: 20 }}></img>\r\n              </div>\r\n            </div>\r\n        <ReactTabulator\r\n        style={{width:'100%'}}\r\n        className=\"bg-primary\"\r\n        data={this.state.values}\r\n        columns={this.state.columns}\r\n        tooltips={true}\r\n        layout={\"fitData\"}/>\r\n    </div>\r\n      )\r\n    )\r\n  }\r\n}\r\nexport default UserListScreen;\r\n","import React from 'react';\r\nimport firebase from \"../../config\";\r\nimport { CSVLink } from \"react-csv\";\r\n// import 'react-tabulator/lib/styles.css';\r\nimport { Spinner } from 'react-bootstrap'\r\nimport { React15Tabulator } from \"react-tabulator\";\r\n\r\n\r\nclass SalesScreen extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            values: [],\r\n            columns: [\r\n                { title: \"RazorpayX Account Number\", field: \"RazorpayX_Account_Number\" },\r\n                { title: \"Payout_Amount\", field: \"Payout_Amount\" },\r\n                { title: \"Payout Currency\", field: \"Payout_Currency\" },\r\n                { title: \"Payout Mode\", field: \"Payout_Mode\" },\r\n                { title: \"Payout Purpose\", field: \"Payout_Purpose\" },\r\n                { title: \"Payout Narration\", field: \"Payout_Narration\" },\r\n                { title: \"Payout Reference Id\", field: \"Payout_Reference_Id\" },\r\n                { title: \"Fund Account Id\", field: \"Fund_Account_Id\" },\r\n                { title: \"Fund Account Type\", field: \"Fund_Account_Type\" },\r\n                { title: \"Fund Account Name\", field: \"Fund_Account_Name\" },\r\n                { title: \"Fund Account Ifsc\", field: \"Fund_Account_Ifsc\" },\r\n                { title: \"Fund Account Number\", field: \"Fund_Account_Number\" },\r\n                { title: \"Fund Account Vpa\", field: \"Fund_Account_Vpa\" },\r\n                { title: \"Contact Type\", field: \"Contact_Type\" },\r\n                { title: \"Contact Name\", field: \"Contact_Name\" },\r\n                { title: \"Contact Email\", field: \"Contact_Email\" },\r\n                { title: \"Contact Mobile\", field: \"Contact_Mobile\" },\r\n                { title: \"Contact Reference Id\", field: \"Contact_Reference_Id\" },\r\n                { title: \"notes place\", field: \"notes_place\" },\r\n                { title: \"notes code\", field: \"notes_code\" },\r\n            ],\r\n            csv: [\r\n                { label: \"RazorpayX Account Number\", key: \"RazorpayX_Account_Number\" },\r\n                { label: \"Payout_Amount\", key: \"Payout_Amount\" },\r\n                { label: \"Payout Currency\", key: \"Payout_Currency\" },\r\n                { label: \"Payout Mode\", key: \"Payout_Mode\" },\r\n                { label: \"Payout Purpose\", key: \"Payout_Purpose\" },\r\n                { label: \"Payout Narration\", key: \"Payout_Narration\" },\r\n                { label: \"Payout Reference Id\", key: \"Payout_Reference_Id\" },\r\n                { label: \"Fund Account Id\", key: \"Fund_Account_Id\" },\r\n                { label: \"Fund Account Type\", key: \"Fund_Account_Type\" },\r\n                { label: \"Fund Account Name\", key: \"Fund_Account_Name\" },\r\n                { label: \"Fund Account Ifsc\", key: \"Fund_Account_Ifsc\" },\r\n                { label: \"Fund Account Number\", key: \"Fund_Account_Number\" },\r\n                { label: \"Fund Account Vpa\", key: \"Fund_Account_Vpa\" },\r\n                { label: \"Contact Type\", key: \"Contact_Type\" },\r\n                { label: \"Contact Name\", key: \"Contact_Name\" },\r\n                { label: \"Contact Email\", key: \"Contact_Email\" },\r\n                { label: \"Contact Mobile\", key: \"Contact_Mobile\" },\r\n                { label: \"Contact Reference Id\", key: \"Contact_Reference_Id\" },\r\n                { label: \"notes place\", key: \"notes_place\" },\r\n                { label: \"notes code\", key: \"notes_code\" },\r\n            ],\r\n            isLoading: true\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(\"mouded\");\r\n        this.setState({ isLoading: true });\r\n        this.newFun();\r\n    }\r\n\r\n    newFun = async () => {\r\n        try {\r\n            var fire = await firebase.database().ref('Payout').child('Details');\r\n            await fire.on('value', snapshot => {\r\n                let list = [];\r\n                snapshot.forEach(snap => {\r\n                    list.push(snap.val());\r\n                });\r\n                console.log(list);\r\n                this.setState({ values: list, isLoading: false });\r\n            })\r\n        } catch (e) {\r\n            console.log(e.message)\r\n        }\r\n    }\r\n\r\n    handleCSV = () =>{\r\n        setTimeout( async() => {\r\n            Promise.all([await this.removeNode(), await this.modeData(), await firebase.database().ref('Payout').child('Details').remove()]);\r\n          }, 2000);\r\n      }\r\n\r\nremoveNode = () =>{\r\n    try{\r\n       return new Promise(async(resolve) =>{\r\n            await firebase.database().ref('Payout').child('Backup').remove()\r\n            resolve('solved')\r\n       })\r\n    } catch(e){\r\n        alert(e.message);\r\n    }\r\n}\r\n\r\nmodeData = async () =>{\r\n    try{\r\n        return new Promise(async(resolve) =>{\r\n            var fire = await firebase.database().ref('Payout').child(\"Backup\");\r\n            this.state.values.forEach(async index => {\r\n            await fire.push({\r\n                RazorpayX_Account_Number: index.RazorpayX_Account_Number,\r\n                Payout_Amount: Number(index.Payout_Amount),\r\n                Payout_Currency: index.Payout_Currency,\r\n                Payout_Mode: index.Payout_Mode,\r\n                Payout_Purpose: index.Payout_Purpose,\r\n                Payout_Narration: index.Payout_Narration,\r\n                Payout_Reference_Id: index.Payout_Reference_Id,\r\n                Fund_Account_Id: index.Fund_Account_Id,\r\n                Fund_Account_Type: index.Fund_Account_Type,\r\n                Fund_Account_Name: index.Fund_Account_Name,\r\n                Fund_Account_Ifsc: index.Fund_Account_Ifsc,\r\n                Fund_Account_Number: Number(index.Fund_Account_Number),\r\n                Fund_Account_Vpa: index.Fund_Account_Vpa,\r\n                Contact_Type: index.Contact_Type,\r\n                Contact_Name: index.Contact_Name,\r\n                Contact_Email: index.Contact_Email,\r\n                Contact_Mobile: Number(index.Contact_Mobile),\r\n                Contact_Reference_Id: index.Contact_Reference_Id,\r\n                notes_place: index.notes_place,\r\n                notes_code: index.notes_code\r\n            })\r\n        })\r\n        resolve(\"solved\");\r\n    })\r\n} catch(e){\r\n        console.log(e.message);\r\n    }\r\n}\r\n    render() {\r\n        return (\r\n            this.state.isLoading == true ? (\r\n                <div className=\"d-flex justify-content-center align-items-center\" style={{ backgroundColor: '#f6f7fb', height: '100vh', width: '95vw' }}>\r\n                    <Spinner animation=\"border\" />\r\n                </div>\r\n            ) : (\r\n                    <div style={{ height: '100vh' }}>\r\n                        <div className=\"bg-primary d-flex justify-content-between align-items-center\" style={{ width: '100%', height: 60 }}>\r\n                            <div className=\"d-flex flex-row justify-content-center align-items-center\">\r\n                                <span className=\"font-weight-bold pl-4 mr-3\" style={{ fontSize: 20, color: 'white' }}>PAY OUT</span>\r\n                                <CSVLink data={this.state.values} headers={this.state.csv} filename={\"payment.csv\"} onClick={() => this.handleCSV()} className=\"mr-3 text-primary d-flex justify-content-center align-items-center p-2 rounded-lg\" style={{ backgroundColor: 'white' }}>\r\n                                    <span className=\"font-weight-bolder\">Download CSV</span>\r\n                                </CSVLink>\r\n                            </div>\r\n                            <div type=\"button\" className=\"rounded-circle d-flex justify-content-center align-items-center mr-4\" style={{ width: 40, height: 40, backgroundColor: 'white' }}>\r\n                                <img src={require('../../img/PANTO.png')} style={{ width: 20 }}></img>\r\n                            </div>\r\n                        </div>\r\n                        <React15Tabulator\r\n                            style={{ width: '100%' }}\r\n                            className=\"bg-primary\"\r\n                            data={this.state.values}\r\n                            columns={this.state.columns}\r\n                            tooltips={true}\r\n                            layout={\"fitData\"}\r\n                        />\r\n                    </div>\r\n                )\r\n        )\r\n    }\r\n}\r\nexport default SalesScreen;","import React from 'react';\r\nimport firebase from \"../../config\";\r\nimport { CSVLink } from \"react-csv\";\r\n// import 'react-tabulator/lib/styles.css';\r\nimport { Spinner } from 'react-bootstrap'\r\nimport { React15Tabulator } from \"react-tabulator\";\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\n\r\nvar fire = firebase.database().ref('Payout').child('Details');\r\nclass BackupScreen extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            values: [],\r\n            isLoading: false,\r\n            columns: [\r\n              { title: \"RazorpayX Account Number\", field: \"RazorpayX_Account_Number\"},\r\n              { title: \"Payout_Amount\", field: \"Payout_Amount\"},\r\n              { title: \"Payout Currency\", field: \"Payout_Currency\" },\r\n              { title: \"Payout Mode\", field: \"Payout_Mode\" },\r\n              { title: \"Payout Purpose\", field: \"Payout_Purpose\" },\r\n              { title: \"Payout Narration\", field: \"Payout_Narration\" },\r\n              { title: \"Payout Reference Id\", field: \"Payout_Reference_Id\" },\r\n              { title: \"Fund Account Id\", field: \"Fund_Account_Id\" },\r\n              { title: \"Fund Account Type\", field: \"Fund_Account_Type\" },\r\n              { title: \"Fund Account Name\", field: \"Fund_Account_Name\" },\r\n              { title: \"Fund Account Ifsc\", field: \"Fund_Account_Ifsc\" },\r\n              { title: \"Fund Account Number\", field: \"Fund_Account_Number\" },\r\n              { title: \"Fund Account Vpa\", field: \"Fund_Account_Vpa\" },\r\n              { title: \"Contact Type\", field: \"Contact_Type\" },\r\n              { title: \"Contact Name\", field: \"Contact_Name\" },\r\n              { title: \"Contact Email\", field: \"Contact_Email\" },\r\n              { title: \"Contact Mobile\", field: \"Contact_Mobile\" },\r\n              { title: \"Contact Reference Id\", field: \"Contact_Reference_Id\" },\r\n              { title: \"notes place\", field: \"notes_place\" },\r\n              { title: \"notes code\", field: \"notes_code\" },\r\n            ],\r\n            csv: [\r\n                { label: \"RazorpayX Account Number\", key: \"RazorpayX_Account_Number\"},\r\n                { label: \"Payout_Amount\", key: \"Payout_Amount\"},\r\n                { label: \"Payout Currency\", key: \"Payout_Currency\" },\r\n                { label: \"Payout Mode\", key: \"Payout_Mode\" },\r\n                { label: \"Payout Purpose\", key: \"Payout_Purpose\" },\r\n                { label: \"Payout Narration\", key: \"Payout_Narration\" },\r\n                { label: \"Payout Reference Id\", key: \"Payout_Reference_Id\" },\r\n                { label: \"Fund Account Id\", key: \"Fund_Account_Id\" },\r\n                { label: \"Fund Account Type\", key: \"Fund_Account_Type\" },\r\n                { label: \"Fund Account Name\", key: \"Fund_Account_Name\" },\r\n                { label: \"Fund Account Ifsc\", key: \"Fund_Account_Ifsc\" },\r\n                { label: \"Fund Account Number\", key: \"Fund_Account_Number\" },\r\n                { label: \"Fund Account Vpa\", key: \"Fund_Account_Vpa\" },\r\n                { label: \"Contact Type\", key: \"Contact_Type\" },\r\n                { label: \"Contact Name\", key: \"Contact_Name\" },\r\n                { label: \"Contact Email\", key: \"Contact_Email\" },\r\n                { label: \"Contact Mobile\", key: \"Contact_Mobile\" },\r\n                { label: \"Contact Reference Id\", key: \"Contact_Reference_Id\" },\r\n                { label: \"notes place\", key: \"notes_place\" },\r\n                { label: \"notes code\", key: \"notes_code\" },\r\n              ],\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(\"mouded\");\r\n        this.setState({ isLoading: true });\r\n        this.newFun();\r\n    }\r\n\r\n    newFun = async () => {\r\n        try {\r\n            var fire = await firebase.database().ref('Payout').child('Backup');\r\n            await fire.on('value', snapshot => {\r\n                let list = [];\r\n                snapshot.forEach(snap => {\r\n                    list.push(snap.val());\r\n                });\r\n                console.log(list);\r\n                this.setState({ values: list, isLoading: false });\r\n            })\r\n        } catch (e) {\r\n            console.log(e.message)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            this.state.isLoading == true ? (\r\n                <div className=\"d-flex justify-content-center align-items-center\" style={{ backgroundColor: '#f6f7fb', height: '100vh', width: '95vw' }}>\r\n                    <Spinner animation=\"border\" />\r\n                </div>\r\n            ) : (\r\n                    <div style={{ height: '100vh' }}>\r\n                        <div className=\"bg-primary d-flex justify-content-between align-items-center\" style={{ width: '100%', height: 60 }}>\r\n                            <div className=\"d-flex flex-row justify-content-center align-items-center\">\r\n                                <span className=\"font-weight-bold pl-4 mr-3\" style={{ fontSize: 20, color: 'white' }}>BACKUP</span>\r\n                            </div>\r\n                            <div type=\"button\" className=\"rounded-circle d-flex justify-content-center align-items-center mr-4\" style={{ width: 40, height: 40, backgroundColor: 'white' }}>\r\n                                <img src={require('../../img/PANTO.png')} style={{ width: 20 }}></img>\r\n                            </div>\r\n                        </div>\r\n                        <React15Tabulator\r\n                            style={{ width: '100%' }}\r\n                            className=\"bg-primary\"\r\n                            data={this.state.values}\r\n                            columns={this.state.columns}\r\n                            tooltips={true}\r\n                            layout={\"fitData\"}\r\n                        />\r\n                    </div>\r\n                )\r\n            )\r\n        }\r\n    }\r\nexport default BackupScreen;","import React from 'react';\r\nimport './styles.css';\r\nimport { Route, Switch, NavLink,HashRouter } from 'react-router-dom';\r\nimport DashScreen from \"../Screen/DashScreen/DashScreen\";\r\nimport UserListScreen from \"../Screen/UserListScreen/UserListScreen\";\r\nimport PayOutScreen from \"../Screen/PayOutScreen/PayOutScreen\"\r\nimport BackupScreen from '../Screen/BackupScreen/BackupScreen';\r\n\r\nclass Navigater extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n       <HashRouter basename=\"/\">\r\n        <div className=\"wrapper d-flex\">\r\n          <div className=\"sidebar\">\r\n            <div className=\"sidebar-header d-flex justify-content-center align-items-center\">\r\n              <img src={require('../img/PANTO.png')} alt=\"\" className=\"logo\" />\r\n            </div>\r\n            <ul className=\"list-unstyled components d-flex flex-column align-items-center mt-5\">\r\n              <li className=\"sidebar-opt mb-4\">\r\n                <NavLink className=\"sidebarlink nav-link p-3 fa fa-slack text-primary\" exact  to={{ pathname: `/` }} activeStyle={{ color: 'white' }} data-toggle=\"tooltip\" data-placement=\"right\" title=\"DashBoard\" />\r\n              </li>\r\n              <li className=\"sidebar-opt mb-4\">\r\n                <NavLink className=\"sidebarlink nav-link p-3 fa fa-lastfm text-primary\" exact to={{ pathname: `/user` }} activeStyle={{ color: 'white' }} data-toggle=\"tooltip\" data-placement=\"right\" title=\"User List\" />\r\n              </li>\r\n              <li className=\"sidebar-opt mb-4\">\r\n                <NavLink className=\"sidebarlink nav-link p-3 fa fa-credit-card-alt text-primary\" to={{ pathname: `/payOut` }} activeStyle={{ color: 'white' }} data-toggle=\"tooltip\" data-placement=\"right\" title=\"payOut\" />\r\n              </li>\r\n              <li className=\"sidebar-opt mb-4\">\r\n                <NavLink className=\"sidebarlink nav-link p-3 fa fa-th text-primary\" to={{ pathname: `/backup` }} activeStyle={{ color: 'white' }} data-toggle=\"tooltip\" data-placement=\"right\" title=\"backup\" />\r\n              </li>\r\n            </ul>\r\n          </div>\r\n          <div>\r\n            <Switch>\r\n            <Route exact  path=\"/\" component={DashScreen}/>\r\n            <Route  path=\"/user\"component={UserListScreen}/>\r\n            <Route path=\"/payOut\" component={PayOutScreen}/>\r\n            <Route path=\"/backup\" component={BackupScreen}/>\r\n            </Switch>\r\n          </div>\r\n        </div>\r\n      </HashRouter>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Navigater;\r\n","import React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"tabulator-tables/dist/css/tabulator.min.css\";\nimport Navigator from \"./component/navigater\";\n\n\nfunction App() {\n  return (\n    <>\n      <Navigator></Navigator>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}